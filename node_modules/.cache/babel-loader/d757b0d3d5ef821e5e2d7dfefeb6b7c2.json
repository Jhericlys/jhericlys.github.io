{"ast":null,"code":"import IMask from './holder.js';\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\n\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n\n\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n  /** Total offset considering all changes */\n\n\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n\n}\n\nIMask.ChangeDetails = ChangeDetails;\nexport { ChangeDetails as default };","map":{"version":3,"sources":["C:/Programacao/CCB/Web/node_modules/imask/esm/core/change-details.js"],"names":["IMask","ChangeDetails","constructor","details","Object","assign","inserted","rawInserted","skip","tailShift","aggregate","offset","length","default"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,CAAoB;AAClB;;AAEA;;AAEA;;AAEA;AAEAC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB;AAClBC,MAAAA,QAAQ,EAAE,EADQ;AAElBC,MAAAA,WAAW,EAAE,EAFK;AAGlBC,MAAAA,IAAI,EAAE,KAHY;AAIlBC,MAAAA,SAAS,EAAE;AAJO,KAApB,EAKGN,OALH;AAMD;AAED;AACF;AACA;AACA;;;AACEO,EAAAA,SAAS,CAACP,OAAD,EAAU;AACjB,SAAKI,WAAL,IAAoBJ,OAAO,CAACI,WAA5B;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,IAAaL,OAAO,CAACK,IAAjC;AACA,SAAKF,QAAL,IAAiBH,OAAO,CAACG,QAAzB;AACA,SAAKG,SAAL,IAAkBN,OAAO,CAACM,SAA1B;AACA,WAAO,IAAP;AACD;AAED;;;AACU,MAANE,MAAM,GAAG;AACX,WAAO,KAAKF,SAAL,GAAiB,KAAKH,QAAL,CAAcM,MAAtC;AACD;;AAjCiB;;AAmCpBZ,KAAK,CAACC,aAAN,GAAsBA,aAAtB;AAEA,SAASA,aAAa,IAAIY,OAA1B","sourcesContent":["import IMask from './holder.js';\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n"]},"metadata":{},"sourceType":"module"}