{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8082' //   <<---- MUDE AQUI PARA A SUA API... \n\n});\napi.interceptors.request.use(req => {\n  if (localStorage.getItem('sessionToken')) {\n    req.headers.Authorization = `Bearer ${localStorage.getItem('sessionToken')}`;\n  }\n\n  return req;\n}, err => {\n  console.log(err);\n});\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response.status === 401) {\n    localStorage.removeItem('sessionToken');\n    document.location = '/login';\n  }\n\n  return error;\n});\nexport default api;","map":{"version":3,"sources":["C:/Programacao/CCB/Web/src/services/api.js"],"names":["axios","api","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","err","console","log","response","error","status","removeItem","document","location"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE,uBADY,CACc;;AADd,CAAb,CAAZ;AAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6BC,GAAG,IAAI;AAChC,MAAIC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAJ,EAA0C;AACtCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqC,EAA3E;AACH;;AAED,SAAOF,GAAP;AACH,CAND,EAOCK,GAAD,IAAS;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CATD;AAYAX,GAAG,CAACG,YAAJ,CAAiBW,QAAjB,CAA0BT,GAA1B,CAA8BS,QAAQ,IAAI;AACtC,SAAOA,QAAP;AACH,CAFD,EAEGC,KAAK,IAAI;AACR,MAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AAC/BT,IAAAA,YAAY,CAACU,UAAb,CAAwB,cAAxB;AACAC,IAAAA,QAAQ,CAACC,QAAT,GAAoB,QAApB;AACH;;AACD,SAAOJ,KAAP;AACH,CARD;AAaA,eAAef,GAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:8082'   //   <<---- MUDE AQUI PARA A SUA API... \r\n});\r\n\r\napi.interceptors.request.use(req => {\r\n    if (localStorage.getItem('sessionToken')) {\r\n        req.headers.Authorization = `Bearer ${localStorage.getItem('sessionToken')}`;\r\n    }\r\n\r\n    return req;\r\n},\r\n(err) => {\r\n    console.log(err);\r\n});\r\n\r\n\r\napi.interceptors.response.use(response => {\r\n    return response;\r\n}, error => {\r\n    if (error.response.status === 401) {\r\n        localStorage.removeItem('sessionToken');\r\n        document.location = '/login';\r\n    }\r\n    return error;\r\n});\r\n\r\n\r\n\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}